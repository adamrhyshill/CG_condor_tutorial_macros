

Sub Aspect_plot_general_points_one()
'
' Aspect_plot_general Macro
'

'
    Range("A1").Select
    Dim NumRows As String
    Dim NumColumns As Integer
    Dim SeriesCount As Integer
    NumRows = Range("A1", Range("A1").End(xlDown)).Rows.Count
    NumColumns = Range("A1", Range("A1").End(xlToRight)).Columns.Count
    ColumnLetter = Split(Cells(1, NumColumns).Address, "$")(1)
    RowLetter = Split(Cells(NumRows, 1).Address, "$")(1)
    Dim EndRange As String
    EndRange = "A1:" + ColumnLetter + NumRows
    Dim EndRangeRow As String
    EndRangeRow = RowLetter + NumRows
    ActiveSheet.Shapes.AddChart2(240, xlXYScatter).Select
    ActiveChart.SetSourceData Source:=Range(EndRange), PlotBy:=xlColumns
    ActiveChart.SetElement (msoElementChartTitleNone)
    ActiveChart.SetElement (msoElementPrimaryValueGridLinesNone)
    ActiveChart.SetElement (msoElementPrimaryCategoryGridLinesNone)
    ActiveChart.SetElement (msoElementPrimaryCategoryAxisTitleAdjacentToAxis)
    ActiveChart.SetElement (msoElementPrimaryValueAxisTitleAdjacentToAxis)
    ActiveChart.SetElement (msoElementLegendRight)
    ActiveChart.Axes(xlValue).HasTitle = True
    ActiveChart.Axes(xlCategory).AxisTitle.Select
    Selection.Caption = "Energy Spacing (kcal / mol)"
    ActiveChart.Axes(xlValue).AxisTitle.Select
    Selection.Caption = "Aspect Ratio"
    ActiveChart.Axes(xlCategory).AxisTitle.Select
    ActiveChart.Axes(xlValue).Select
    ActiveChart.Axes(xlCategory).Select
    ActiveChart.Legend.Select
    ActiveChart.Axes(xlCategory).Select
    With Selection.Format.Line
        .Visible = msoTrue
        .ForeColor.ObjectThemeColor = msoThemeColorText1
        .ForeColor.TintAndShade = 0
        .ForeColor.Brightness = 0
        .Transparency = 0
    End With
    ActiveChart.Axes(xlValue).Select
    With Selection.Format.Line
        .Visible = msoTrue
        .ForeColor.ObjectThemeColor = msoThemeColorText1
        .ForeColor.TintAndShade = 0
        .ForeColor.Brightness = 0
        .Transparency = 0
    End With
    
    ActiveChart.ChartArea.Height = 400
    ActiveChart.ChartArea.Width = 500
    ActiveChart.Axes(xlValue).TickLabels.Font.ColorIndex = 1
    ActiveChart.Axes(xlCategory).TickLabels.Font.ColorIndex = 1
    ActiveChart.Axes(xlValue).AxisTitle.Font.ColorIndex = 1
    ActiveChart.Axes(xlCategory).AxisTitle.Font.ColorIndex = 1
    ActiveChart.Axes(xlValue).TickLabels.Font.Size = 14
    ActiveChart.Axes(xlCategory).TickLabels.Font.Size = 14
    ActiveChart.Axes(xlValue).AxisTitle.Font.Size = 16
    ActiveChart.Axes(xlCategory).AxisTitle.Font.Size = 16
    ActiveChart.Legend.Font.Size = 11
    ActiveChart.Legend.Font.ColorIndex = 1
    If Range("A2").Value < 0.5 Then
    ActiveChart.Axes(xlCategory).MinimumScale = 0
    Else
    ActiveChart.Axes(xlCategory).MinimumScale = Range("A2")
    End If
    
    ActiveChart.Axes(xlCategory).MaximumScale = Round(Range(EndRangeRow), 1)
    Range("A1").Select
    
End Sub

Sub Merge_spaced()
Dim intChoice As Integer
Dim strPath As String
Dim I As Integer

'allow the user to select multiple files and restrict view to txt by default
Call Application.FileDialog(msoFileDialogOpen).Filters.Clear
Call Application.FileDialog(msoFileDialogOpen).Filters.Add( _
"txt Files", "*.txt")
Call Application.FileDialog(msoFileDialogOpen).Filters.Add( _
"All Files", "*.*")
Application.FileDialog(msoFileDialogOpen).AllowMultiSelect = True

'make the file dialog visible to the user
intChoice = Application.FileDialog(msoFileDialogOpen).Show

'determine what choice the user made
If intChoice <> 0 Then
'get the file paths selected by the user
For I = 1 To Application.FileDialog(msoFileDialogOpen _
).SelectedItems.Count
strPath = Application.FileDialog(msoFileDialogOpen _
).SelectedItems(I)

'obtain the filename without the folder path
strFileName = Right(strPath, Len(strPath) - InStrRev(strPath, "\"))

'create new sheet with the correct name
newsheetname = Left(strFileName, 31)

'import data from txt
Sheets.Add.Name = newsheetname
With ActiveSheet.QueryTables.Add(Connection:= _
"TEXT;" & strPath _
, Destination:=Range("$A$1"))
.Name = newsheetname
.FieldNames = True
.RowNumbers = False
.FillAdjacentFormulas = False
.PreserveFormatting = True
.RefreshOnFileOpen = False
.RefreshStyle = xlInsertDeleteCells
.SavePassword = False
.SaveData = True
.AdjustColumnWidth = True
.RefreshPeriod = 0
.TextFilePromptOnRefresh = False
.TextFilePlatform = 850
.TextFileStartRow = 1
.TextFileParseType = xlDelimited
.TextFileTextQualifier = xlTextQualifierDoubleQuote
.TextFileConsecutiveDelimiter = False
.TextFileTabDelimiter = True
.TextFileSemicolonDelimiter = False
.TextFileCommaDelimiter = False
.TextFileSpaceDelimiter = True
.TextFileColumnDataTypes = Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
.TextFileTrailingMinusNumbers = True
.Refresh BackgroundQuery:=False
End With
Next I

End If
End Sub

Sub MergeCSVs()
Dim intChoice As Integer
Dim strPath As String
Dim I As Integer

'allow the user to select multiple files and restrict view to csv by default
Call Application.FileDialog(msoFileDialogOpen).Filters.Clear
Call Application.FileDialog(msoFileDialogOpen).Filters.Add( _
"CSV Files Only", "*.csv")
Call Application.FileDialog(msoFileDialogOpen).Filters.Add( _
"All Files", "*.*")
Application.FileDialog(msoFileDialogOpen).AllowMultiSelect = True

'make the file dialog visible to the user
intChoice = Application.FileDialog(msoFileDialogOpen).Show

'determine what choice the user made
If intChoice <> 0 Then
'get the file paths selected by the user
For I = 1 To Application.FileDialog(msoFileDialogOpen _
).SelectedItems.Count
strPath = Application.FileDialog(msoFileDialogOpen _
).SelectedItems(I)

'obtain the filename without the folder path
strFileName = Right(strPath, Len(strPath) - InStrRev(strPath, "\"))

'create new sheet with the correct name
newsheetname = Left(strFileName, 31)

'import data from csv
Sheets.Add.Name = newsheetname
With ActiveSheet.QueryTables.Add(Connection:= _
"TEXT;" & strPath _
, Destination:=Range("$A$1"))
.Name = newsheetname
.FieldNames = True
.RowNumbers = False
.FillAdjacentFormulas = False
.PreserveFormatting = True
.RefreshOnFileOpen = False
.RefreshStyle = xlInsertDeleteCells
.SavePassword = False
.SaveData = True
.AdjustColumnWidth = True
.RefreshPeriod = 0
.TextFilePromptOnRefresh = False
.TextFilePlatform = 850
.TextFileStartRow = 1
.TextFileParseType = xlDelimited
.TextFileTextQualifier = xlTextQualifierDoubleQuote
.TextFileConsecutiveDelimiter = False
.TextFileTabDelimiter = True
.TextFileSemicolonDelimiter = False
.TextFileCommaDelimiter = True
.TextFileSpaceDelimiter = False
.TextFileColumnDataTypes = Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
.TextFileTrailingMinusNumbers = True
.Refresh BackgroundQuery:=False
End With
Next I

End If
End Sub

Sub DEBUG_Combine_and_Plot_Trend()
Dim intChoice As Integer
Dim strPath As String
Dim I As Integer

'allow the user to select multiple files and restrict view to csv by default
Call Application.FileDialog(msoFileDialogOpen).Filters.Clear
Call Application.FileDialog(msoFileDialogOpen).Filters.Add( _
"CSV Files Only", "*.csv")
Call Application.FileDialog(msoFileDialogOpen).Filters.Add( _
"All Files", "*.*")
Application.FileDialog(msoFileDialogOpen).AllowMultiSelect = True

'make the file dialog visible to the user
intChoice = Application.FileDialog(msoFileDialogOpen).Show

'determine what choice the user made
If intChoice <> 0 Then
'get the file paths selected by the user
For I = 1 To Application.FileDialog(msoFileDialogOpen _
).SelectedItems.Count
strPath = Application.FileDialog(msoFileDialogOpen _
).SelectedItems(I)

'obtain the filename without the folder path
strFileName = Right(strPath, Len(strPath) - InStrRev(strPath, "\"))

'create new sheet with the correct name
newsheetname = Left(strFileName, 31)

'import data from csv
Sheets.Add.Name = newsheetname
With ActiveSheet.QueryTables.Add(Connection:= _
"TEXT;" & strPath _
, Destination:=Range("$A$1"))
.Name = newsheetname
.FieldNames = True
.RowNumbers = False
.FillAdjacentFormulas = False
.PreserveFormatting = True
.RefreshOnFileOpen = False
.RefreshStyle = xlInsertDeleteCells
.SavePassword = False
.SaveData = True
.AdjustColumnWidth = True
.RefreshPeriod = 0
.TextFilePromptOnRefresh = False
.TextFilePlatform = 850
.TextFileStartRow = 1
.TextFileParseType = xlDelimited
.TextFileTextQualifier = xlTextQualifierDoubleQuote
.TextFileConsecutiveDelimiter = False
.TextFileTabDelimiter = True
.TextFileSemicolonDelimiter = False
.TextFileCommaDelimiter = True
.TextFileSpaceDelimiter = False
.TextFileColumnDataTypes = Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
.TextFileTrailingMinusNumbers = True
.Refresh BackgroundQuery:=False

        Range("A1").Select
    Dim NumRows As String
    Dim NumColumns As Integer
    Dim SeriesCount As Integer
    NumRows = Range("A1", Range("A1").End(xlDown)).Rows.Count
    NumColumns = Range("A1", Range("A1").End(xlToRight)).Columns.Count
    ColumnLetter = Split(Cells(1, NumColumns).Address, "$")(1)
    RowLetter = Split(Cells(NumRows, 1).Address, "$")(1)
    Dim EndRange As String
    EndRange = "A1:" + ColumnLetter + NumRows
    Dim EndRangeRow As String
    EndRangeRow = RowLetter + NumRows
    ActiveSheet.Shapes.AddChart2(240, xlXYScatter).Select
    ActiveChart.SetSourceData Source:=Range(EndRange), PlotBy:=xlColumns
    ActiveChart.SetElement (msoElementChartTitleNone)
    ActiveChart.SetElement (msoElementPrimaryValueGridLinesNone)
    ActiveChart.SetElement (msoElementPrimaryCategoryGridLinesNone)
    ActiveChart.SetElement (msoElementPrimaryCategoryAxisTitleAdjacentToAxis)
    ActiveChart.SetElement (msoElementPrimaryValueAxisTitleAdjacentToAxis)
    ActiveChart.SetElement (msoElementLegendRight)
    ActiveChart.Axes(xlValue).HasTitle = True
    ActiveChart.Axes(xlCategory).AxisTitle.Select
    Selection.Caption = "Energy Spacing (kcal / mol)"
    ActiveChart.Axes(xlValue).AxisTitle.Select
    Selection.Caption = "Aspect Ratio"
    ActiveChart.Axes(xlCategory).AxisTitle.Select
    ActiveChart.Axes(xlValue).Select
    ActiveChart.Axes(xlCategory).Select
    ActiveChart.Legend.Select
    ActiveChart.Axes(xlCategory).Select
    With Selection.Format.Line
        .Visible = msoTrue
        .ForeColor.ObjectThemeColor = msoThemeColorText1
        .ForeColor.TintAndShade = 0
        .ForeColor.Brightness = 0
        .Transparency = 0
    End With
    ActiveChart.Axes(xlValue).Select
    With Selection.Format.Line
        .Visible = msoTrue
        .ForeColor.ObjectThemeColor = msoThemeColorText1
        .ForeColor.TintAndShade = 0
        .ForeColor.Brightness = 0
        .Transparency = 0
    End With
    
    ActiveChart.ChartArea.Height = 400
    ActiveChart.ChartArea.Width = 500
    ActiveChart.Axes(xlValue).TickLabels.Font.ColorIndex = 1
    ActiveChart.Axes(xlCategory).TickLabels.Font.ColorIndex = 1
    ActiveChart.Axes(xlValue).AxisTitle.Font.ColorIndex = 1
    ActiveChart.Axes(xlCategory).AxisTitle.Font.ColorIndex = 1
    ActiveChart.Axes(xlValue).TickLabels.Font.Size = 14
    ActiveChart.Axes(xlCategory).TickLabels.Font.Size = 14
    ActiveChart.Axes(xlValue).AxisTitle.Font.Size = 16
    ActiveChart.Axes(xlCategory).AxisTitle.Font.Size = 16
    ActiveChart.Legend.Font.Size = 11
    ActiveChart.Legend.Font.ColorIndex = 1
    If Range("A2").Value < 0.5 Then
    ActiveChart.Axes(xlCategory).MinimumScale = 0
    Else
    ActiveChart.Axes(xlCategory).MinimumScale = Range("A2")
    End If
    
    ActiveChart.Axes(xlCategory).MaximumScale = Round(Range(EndRangeRow), 1)
    Range("A1").Select

End With
Next I

End If
End Sub


Sub Combine_and_Plot_no_R()
Dim intChoice As Integer
Dim strPath As String
Dim I As Integer

'allow the user to select multiple files and restrict view to csv by default
Call Application.FileDialog(msoFileDialogOpen).Filters.Clear
Call Application.FileDialog(msoFileDialogOpen).Filters.Add( _
"CSV Files Only", "*.csv")
Call Application.FileDialog(msoFileDialogOpen).Filters.Add( _
"All Files", "*.*")
Application.FileDialog(msoFileDialogOpen).AllowMultiSelect = True

'make the file dialog visible to the user
intChoice = Application.FileDialog(msoFileDialogOpen).Show

'determine what choice the user made
If intChoice <> 0 Then
'get the file paths selected by the user
For I = 1 To Application.FileDialog(msoFileDialogOpen _
).SelectedItems.Count
strPath = Application.FileDialog(msoFileDialogOpen _
).SelectedItems(I)

'obtain the filename without the folder path
strFileName = Right(strPath, Len(strPath) - InStrRev(strPath, "\"))

'create new sheet with the correct name
newsheetname = Left(strFileName, 31)

'import data from csv
Sheets.Add.Name = newsheetname
With ActiveSheet.QueryTables.Add(Connection:= _
"TEXT;" & strPath _
, Destination:=Range("$A$1"))
.Name = newsheetname
.FieldNames = True
.RowNumbers = False
.FillAdjacentFormulas = False
.PreserveFormatting = True
.RefreshOnFileOpen = False
.RefreshStyle = xlInsertDeleteCells
.SavePassword = False
.SaveData = True
.AdjustColumnWidth = True
.RefreshPeriod = 0
.TextFilePromptOnRefresh = False
.TextFilePlatform = 850
.TextFileStartRow = 1
.TextFileParseType = xlDelimited
.TextFileTextQualifier = xlTextQualifierDoubleQuote
.TextFileConsecutiveDelimiter = False
.TextFileTabDelimiter = True
.TextFileSemicolonDelimiter = False
.TextFileCommaDelimiter = True
.TextFileSpaceDelimiter = False
.TextFileColumnDataTypes = Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
.TextFileTrailingMinusNumbers = True
.Refresh BackgroundQuery:=False

    Range("A1").Select
    Dim NumRows As String
    Dim NumColumns As Integer
    Dim SeriesCount As Integer
    NumRows = Range("A1", Range("A1").End(xlDown)).Rows.Count
    NumColumns = Range("A1", Range("A1").End(xlToRight)).Columns.Count
    ColumnLetter = Split(Cells(1, NumColumns).Address, "$")(1)
    RowLetter = Split(Cells(NumRows, 1).Address, "$")(1)
    Dim EndRange As String
    EndRange = "A1:" + ColumnLetter + NumRows
    EndRangeRow = RowLetter + NumRows
    ActiveSheet.Shapes.AddChart2(240, xlXYScatter).Select
        ActiveChart.SetSourceData Source:=Range(EndRange), PlotBy:=xlColumns
    ActiveChart.SetElement (msoElementChartTitleNone)
    ActiveChart.SetElement (msoElementPrimaryValueGridLinesNone)
    ActiveChart.SetElement (msoElementPrimaryCategoryGridLinesNone)
    ActiveChart.SetElement (msoElementPrimaryCategoryAxisTitleAdjacentToAxis)
    ActiveChart.SetElement (msoElementPrimaryValueAxisTitleAdjacentToAxis)
    ActiveChart.SetElement (msoElementLegendRight)
    ActiveChart.Axes(xlValue).HasTitle = True
    ActiveChart.Axes(xlCategory).AxisTitle.Select
    Selection.Caption = "Energy Spacing (kcal / mol)"
    ActiveChart.Axes(xlValue).AxisTitle.Select
    Selection.Caption = "Aspect Ratio"
    ActiveChart.Axes(xlCategory).AxisTitle.Select
    ActiveChart.Axes(xlValue).Select
    ActiveChart.Axes(xlCategory).Select
    ActiveChart.Legend.Select
    ActiveChart.Axes(xlCategory).Select
    With Selection.Format.Line
        .Visible = msoTrue
        .ForeColor.ObjectThemeColor = msoThemeColorText1
        .ForeColor.TintAndShade = 0
        .ForeColor.Brightness = 0
        .Transparency = 0
    End With
    ActiveChart.Axes(xlValue).Select
    With Selection.Format.Line
        .Visible = msoTrue
        .ForeColor.ObjectThemeColor = msoThemeColorText1
        .ForeColor.TintAndShade = 0
        .ForeColor.Brightness = 0
        .Transparency = 0
    End With
    
    For SeriesCount = 1 To NumColumns - 1
    ActiveChart.FullSeriesCollection(SeriesCount).Select
    ActiveChart.FullSeriesCollection(SeriesCount).Trendlines.Add
    ActiveChart.FullSeriesCollection(SeriesCount).Trendlines(1).Select
    With Selection
        .Type = xlPolynomial
        .Order = 2
    End With
    With Selection
        .Type = xlPolynomial
        .Order = 3
    End With
    With Selection
        .Type = xlPolynomial
        .Order = 4
    End With
    With Selection
        .Type = xlPolynomial
        .Order = 5
    End With
    With Selection
        .Type = xlPolynomial
        .Order = 6
    End With
    With Selection.Format.Line
        .Visible = msoTrue
        .DashStyle = msoLineSolid
    End With
    Next SeriesCount
    
    ActiveChart.ChartArea.Height = 400
    ActiveChart.ChartArea.Width = 500
    ActiveChart.Axes(xlValue).TickLabels.Font.ColorIndex = 1
    ActiveChart.Axes(xlCategory).TickLabels.Font.ColorIndex = 1
    ActiveChart.Axes(xlValue).AxisTitle.Font.ColorIndex = 1
    ActiveChart.Axes(xlCategory).AxisTitle.Font.ColorIndex = 1
    ActiveChart.Axes(xlValue).TickLabels.Font.Size = 14
    ActiveChart.Axes(xlCategory).TickLabels.Font.Size = 14
    ActiveChart.Axes(xlValue).AxisTitle.Font.Size = 16
    ActiveChart.Axes(xlCategory).AxisTitle.Font.Size = 16
    ActiveChart.Legend.Font.Size = 11
    ActiveChart.Legend.Font.ColorIndex = 1
    If Range("A2").Value < 0.5 Then
    ActiveChart.Axes(xlCategory).MinimumScale = 0
    Else
    ActiveChart.Axes(xlCategory).MinimumScale = Range("A2")
    End If
    
    ActiveChart.Axes(xlCategory).MaximumScale = Round(Range(EndRangeRow), 1)
    Range("A1").Select

End With
Next I

End If
End Sub


Sub Aspect_Plot_No_Trendline_one()
'
' Macro27 Macro
'

'
    Range("A1").Select
    Dim NumRows As String
    Dim NumColumns As Integer
    Dim SeriesCount As Integer
    NumRows = Range("A1", Range("A1").End(xlDown)).Rows.Count
    NumColumns = Range("A1", Range("A1").End(xlToRight)).Columns.Count
    ColumnLetter = Split(Cells(1, NumColumns).Address, "$")(1)
    RowLetter = Split(Cells(NumRows, 1).Address, "$")(1)
    Dim EndRange As String
    EndRange = "A1:" + ColumnLetter + NumRows
    EndRangeRow = RowLetter + NumRows
    ActiveSheet.Shapes.AddChart2(240, xlXYScatterLinesNoMarkers).Select
    ActiveChart.SetSourceData Source:=Range(EndRange), PlotBy:=xlColumns
    ActiveChart.SetElement (msoElementChartTitleNone)
    ActiveChart.SetElement (msoElementPrimaryValueGridLinesNone)
    ActiveChart.SetElement (msoElementPrimaryCategoryGridLinesNone)
    ActiveChart.SetElement (msoElementPrimaryCategoryAxisTitleAdjacentToAxis)
    ActiveChart.SetElement (msoElementPrimaryValueAxisTitleAdjacentToAxis)
    ActiveChart.SetElement (msoElementLegendRight)
    ActiveChart.Axes(xlValue).HasTitle = True
    ActiveChart.Axes(xlCategory).AxisTitle.Select
    Selection.Caption = "Energy Spacing (kcal / mol)"
    ActiveChart.Axes(xlValue).AxisTitle.Select
    Selection.Caption = "Aspect Ratio"
    ActiveChart.Axes(xlCategory).AxisTitle.Select
    ActiveChart.Axes(xlValue).Select
    ActiveChart.Axes(xlCategory).Select
    ActiveChart.Legend.Select
    ActiveChart.Axes(xlCategory).Select
    With Selection.Format.Line
        .Visible = msoTrue
        .ForeColor.ObjectThemeColor = msoThemeColorText1
        .ForeColor.TintAndShade = 0
        .ForeColor.Brightness = 0
        .Transparency = 0
    End With
    ActiveChart.Axes(xlValue).Select
    With Selection.Format.Line
        .Visible = msoTrue
        .ForeColor.ObjectThemeColor = msoThemeColorText1
        .ForeColor.TintAndShade = 0
        .ForeColor.Brightness = 0
        .Transparency = 0
    End With
    With Selection.Format.Line
        .Visible = msoTrue
        .DashStyle = msoLineSolid
    End With
    With Selection.Format.Line
        .Visible = msoTrue
        .DashStyle = msoLineSolid
    End With
    Application.CommandBars("Format Object").Visible = False
    With Selection.Format.Line
        .Visible = msoTrue
        .DashStyle = msoLineSolid
    End With
    ActiveChart.ChartArea.Height = 400
    ActiveChart.ChartArea.Width = 500
    ActiveChart.Axes(xlValue).TickLabels.Font.ColorIndex = 1
    ActiveChart.Axes(xlCategory).TickLabels.Font.ColorIndex = 1
    ActiveChart.Axes(xlValue).AxisTitle.Font.ColorIndex = 1
    ActiveChart.Axes(xlCategory).AxisTitle.Font.ColorIndex = 1
    ActiveChart.Axes(xlValue).TickLabels.Font.Size = 14
    ActiveChart.Axes(xlCategory).TickLabels.Font.Size = 14
    ActiveChart.Axes(xlValue).AxisTitle.Font.Size = 16
    ActiveChart.Axes(xlCategory).AxisTitle.Font.Size = 16
    ActiveChart.Legend.Font.Size = 11
    ActiveChart.Legend.Font.ColorIndex = 1
    If Range("A2").Value < 0.5 Then
    ActiveChart.Axes(xlCategory).MinimumScale = 0
    Else
    ActiveChart.Axes(xlCategory).MinimumScale = Range("A2")
    End If
    
    ActiveChart.Axes(xlCategory).MaximumScale = Round(Range(EndRangeRow), 1)
    Range("A1").Select
End Sub
Sub Combine_and_Plot_no_Trendlines()
Dim intChoice As Integer
Dim strPath As String
Dim I As Integer

'allow the user to select multiple files and restrict view to csv by default
Call Application.FileDialog(msoFileDialogOpen).Filters.Clear
Call Application.FileDialog(msoFileDialogOpen).Filters.Add( _
"CSV Files Only", "*.csv")
Call Application.FileDialog(msoFileDialogOpen).Filters.Add( _
"All Files", "*.*")
Application.FileDialog(msoFileDialogOpen).AllowMultiSelect = True

'make the file dialog visible to the user
intChoice = Application.FileDialog(msoFileDialogOpen).Show

'determine what choice the user made
If intChoice <> 0 Then
'get the file paths selected by the user
For I = 1 To Application.FileDialog(msoFileDialogOpen _
).SelectedItems.Count
strPath = Application.FileDialog(msoFileDialogOpen _
).SelectedItems(I)

'obtain the filename without the folder path
strFileName = Right(strPath, Len(strPath) - InStrRev(strPath, "\"))

'create new sheet with the correct name
newsheetname = Left(strFileName, 31)

'import data from csv
Sheets.Add.Name = newsheetname
With ActiveSheet.QueryTables.Add(Connection:= _
"TEXT;" & strPath _
, Destination:=Range("$A$1"))
.Name = newsheetname
.FieldNames = True
.RowNumbers = False
.FillAdjacentFormulas = False
.PreserveFormatting = True
.RefreshOnFileOpen = False
.RefreshStyle = xlInsertDeleteCells
.SavePassword = False
.SaveData = True
.AdjustColumnWidth = True
.RefreshPeriod = 0
.TextFilePromptOnRefresh = False
.TextFilePlatform = 850
.TextFileStartRow = 1
.TextFileParseType = xlDelimited
.TextFileTextQualifier = xlTextQualifierDoubleQuote
.TextFileConsecutiveDelimiter = False
.TextFileTabDelimiter = True
.TextFileSemicolonDelimiter = False
.TextFileCommaDelimiter = True
.TextFileSpaceDelimiter = False
.TextFileColumnDataTypes = Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
.TextFileTrailingMinusNumbers = True
.Refresh BackgroundQuery:=False

Call Aspect_Plot_No_Trendline_one

End With
Next I

End If
End Sub
Sub Aspect_Plot_all_no_trendlines()
'
' Aspect_Plot_only_no_trendlines Macro
'

'
    Dim WS_Count As Integer
    Dim I As Integer
         
    ' Set WS_Count equal to the number of worksheets in the active
    ' workbook.
    WS_Count = ActiveWorkbook.Worksheets.Count
         
    ' Begin the loop.
    For I = 1 To WS_Count
    ActiveWorkbook.Worksheets(I).Activate
    Call Aspect_Plot_No_Trendline_one
    Next I
End Sub

Sub Aspect_Plot_all_points()
'
' Aspect_Plot_only_no_trendlines Macro
'

'
    Dim WS_Count As Integer
    Dim I As Integer
         
    ' Set WS_Count equal to the number of worksheets in the active
    ' workbook.
    WS_Count = ActiveWorkbook.Worksheets.Count
         
    ' Begin the loop.
    For I = 1 To WS_Count
    ActiveWorkbook.Worksheets(I).Activate
    Call Aspect_plot_general_points_one
    Next I
End Sub

Sub Combine_and_Plot_points()
Dim intChoice As Integer
Dim strPath As String
Dim I As Integer

'allow the user to select multiple files and restrict view to csv by default
Call Application.FileDialog(msoFileDialogOpen).Filters.Clear
Call Application.FileDialog(msoFileDialogOpen).Filters.Add( _
"CSV Files Only", "*.csv")
Call Application.FileDialog(msoFileDialogOpen).Filters.Add( _
"All Files", "*.*")
Application.FileDialog(msoFileDialogOpen).AllowMultiSelect = True

'make the file dialog visible to the user
intChoice = Application.FileDialog(msoFileDialogOpen).Show

'determine what choice the user made
If intChoice <> 0 Then
'get the file paths selected by the user
For I = 1 To Application.FileDialog(msoFileDialogOpen _
).SelectedItems.Count
strPath = Application.FileDialog(msoFileDialogOpen _
).SelectedItems(I)

'obtain the filename without the folder path
strFileName = Right(strPath, Len(strPath) - InStrRev(strPath, "\"))

'create new sheet with the correct name
newsheetname = Left(strFileName, 31)

'import data from csv
Sheets.Add.Name = newsheetname
With ActiveSheet.QueryTables.Add(Connection:= _
"TEXT;" & strPath _
, Destination:=Range("$A$1"))
.Name = newsheetname
.FieldNames = True
.RowNumbers = False
.FillAdjacentFormulas = False
.PreserveFormatting = True
.RefreshOnFileOpen = False
.RefreshStyle = xlInsertDeleteCells
.SavePassword = False
.SaveData = True
.AdjustColumnWidth = True
.RefreshPeriod = 0
.TextFilePromptOnRefresh = False
.TextFilePlatform = 850
.TextFileStartRow = 1
.TextFileParseType = xlDelimited
.TextFileTextQualifier = xlTextQualifierDoubleQuote
.TextFileConsecutiveDelimiter = False
.TextFileTabDelimiter = True
.TextFileSemicolonDelimiter = False
.TextFileCommaDelimiter = True
.TextFileSpaceDelimiter = False
.TextFileColumnDataTypes = Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
.TextFileTrailingMinusNumbers = True
.Refresh BackgroundQuery:=False

Call Aspect_plot_general_points_one

End With
Next I

End If
End Sub

Sub auto_plot_3d()
'
' auto_plot_3d Macro
'

'
    Range("B2").Select
    Dim NumRows As String
    Dim NumColumns As Integer
    NumRows = Range("C2", Range("C2").End(xlDown)).Rows.Count
    NumRows = NumRows + 1
    NumColumns = Range("B3", Range("B3").End(xlToRight)).Columns.Count
    NumColumns = NumColumns + 1
    ColumnLetter = Split(Cells(1, NumColumns).Address, "$")(1)
    RowLetter = Split(Cells(NumRows, 1).Address, "$")(1)
    Dim EndRange As String
    EndRange = "B2:" + ColumnLetter + NumRows
    EndRangeRow = RowLetter + NumRows


    ActiveSheet.Shapes.AddChart2(307, xlSurface).Select
    ActiveChart.SetSourceData Source:=Range(EndRange)
    
    ActiveChart.SetElement (msoElementChartTitleNone)
    ActiveChart.SetElement (msoElementPrimaryValueGridLinesNone)
    ActiveChart.SetElement (msoElementPrimaryCategoryGridLinesNone)
    ActiveChart.SetElement (msoElementPrimaryCategoryAxisTitleAdjacentToAxis)
    ActiveChart.SetElement (msoElementPrimaryValueAxisTitleAdjacentToAxis)
    ActiveChart.SetElement (msoElementLegendRight)
    ActiveChart.Axes(xlValue).HasTitle = True
    ActiveChart.Axes(xlCategory).AxisTitle.Select
    Selection.Caption = Range("B1")
    ActiveChart.Axes(xlValue).AxisTitle.Select
    Selection.Caption = Range("A3")
    ActiveChart.Axes(xlCategory).AxisTitle.Select
    ActiveChart.Axes(xlValue).Select
    ActiveChart.Axes(xlCategory).Select
    ActiveChart.Legend.Select
    ActiveChart.Axes(xlCategory).Select
    With Selection.Format.Line
        .Visible = msoTrue
        .ForeColor.ObjectThemeColor = msoThemeColorText1
        .ForeColor.TintAndShade = 0
        .ForeColor.Brightness = 0
        .Transparency = 0
    End With
    ActiveChart.Axes(xlValue).Select
    With Selection.Format.Line
        .Visible = msoTrue
        .ForeColor.ObjectThemeColor = msoThemeColorText1
        .ForeColor.TintAndShade = 0
        .ForeColor.Brightness = 0
        .Transparency = 0
    End With
    
End Sub

Sub combine_and_auto_plot_3d()
'
' auto_plot_3d Macro
'

'
Dim intChoice As Integer
Dim strPath As String
Dim I As Integer

'allow the user to select multiple files and restrict view to csv by default
Call Application.FileDialog(msoFileDialogOpen).Filters.Clear
Call Application.FileDialog(msoFileDialogOpen).Filters.Add( _
"CSV Files Only", "*.csv")
Call Application.FileDialog(msoFileDialogOpen).Filters.Add( _
"All Files", "*.*")
Application.FileDialog(msoFileDialogOpen).AllowMultiSelect = True

'make the file dialog visible to the user
intChoice = Application.FileDialog(msoFileDialogOpen).Show

'determine what choice the user made
If intChoice <> 0 Then
'get the file paths selected by the user
For I = 1 To Application.FileDialog(msoFileDialogOpen _
).SelectedItems.Count
strPath = Application.FileDialog(msoFileDialogOpen _
).SelectedItems(I)

'obtain the filename without the folder path
strFileName = Right(strPath, Len(strPath) - InStrRev(strPath, "\"))

'create new sheet with the correct name
newsheetname = Left(strFileName, 31)

'import data from csv
Sheets.Add.Name = newsheetname
With ActiveSheet.QueryTables.Add(Connection:= _
"TEXT;" & strPath _
, Destination:=Range("$A$1"))
.Name = newsheetname
.FieldNames = True
.RowNumbers = False
.FillAdjacentFormulas = False
.PreserveFormatting = True
.RefreshOnFileOpen = False
.RefreshStyle = xlInsertDeleteCells
.SavePassword = False
.SaveData = True
.AdjustColumnWidth = True
.RefreshPeriod = 0
.TextFilePromptOnRefresh = False
.TextFilePlatform = 850
.TextFileStartRow = 1
.TextFileParseType = xlDelimited
.TextFileTextQualifier = xlTextQualifierDoubleQuote
.TextFileConsecutiveDelimiter = False
.TextFileTabDelimiter = True
.TextFileSemicolonDelimiter = False
.TextFileCommaDelimiter = True
.TextFileSpaceDelimiter = False
.TextFileColumnDataTypes = Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
.TextFileTrailingMinusNumbers = True
.Refresh BackgroundQuery:=False

Call auto_plot_3d

End With
Next I

End If
End Sub
